#
# This is a command file.
#
# To make a new test, all you have to do is:
#   1.  Make a new directory under tests/
#   2.  Put a file like this (named "command") into that directory.
#
# The contents of this file will be passed to the shell (Bash or SSH),
# so any legal shell commands can go in this file.
# Or comments like this one, for that matter.
#
# Variable substiution is done using Python's printf format,
# meaning you need a percent sign, the variable name in parentheses,
# and the letter 's' (for 'string').
#
# Available variables include:
#   workdir     the directory where test input files have been copied,
#               and where test output files should end up.
#   minidir     the base directory where Mini lives
#   database    where the Mini database lives
#   bin         where the Mini binaries live
#   binext      the extension on binary files, like ".linuxgccrelease"
#   python      the full path to the Python interpretter
#
# The most important thing is that the test execute in the right directory.
# This is especially true when we're using SSH to execute on other hosts.
# All command files should start with this line:
#

cd %(workdir)s

# making script terminate with error after any command that return non zero exit code
set -e

#
# After that, do whatever you want.

# Some time test could output information which is might be of interest but not stable from
# run-to-run: run times, memory consumption and so on. To preserve this information please save it in file with ‘.ignore’ extension:
date > start-time.ignore

#
# It's nice to test that the executable exists first, to ensure the test actually runs:
[ -x %(bin)s/hydrate.%(binext)s ] || exit 1

#
# Run hydrate to score a wet (fixed) structure with SPaDES scoring function
%(bin)s/hydrate.%(binext)s %(additional_flags)s @score.flags -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log_score

#
# Dump rotamers (water and protein) with the SPaDES protocol
%(bin)s/hydrate.%(binext)s %(additional_flags)s @rotamer.flags -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log_rotamer

#
# Run hydrate code to hydrate one amino acid anchor with three repacked neighbors
%(bin)s/hydrate.%(binext)s %(additional_flags)s @hydrate.flags -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log_repack

date > finish-time.ignore

