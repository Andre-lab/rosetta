cd %(workdir)s

#Test LoopAnalyzer pilot app
[ -x %(bin)s/LoopAnalyzer.%(binext)s ] || exit 1
%(bin)s/LoopAnalyzer.%(binext)s %(additional_flags)s @options_LoopAnalyzer_pilot -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log.LoopAnalyzer_pilot

test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

#Test LoopAnalyzerFilter with loop tag input
[ -x %(bin)s/rosetta_scripts.%(binext)s ] || exit 1
%(bin)s/rosetta_scripts.%(binext)s %(additional_flags)s @options_LAF_tag -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log.LAF_tag

test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

#Test LoopAnalyzerFilter with loop file input
[ -x %(bin)s/rosetta_scripts.%(binext)s ] || exit 1
%(bin)s/rosetta_scripts.%(binext)s %(additional_flags)s @options_LAF_file -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log.LAF_file

test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

#Test LoopAnalyzerMover with loop tag input
[ -x %(bin)s/rosetta_scripts.%(binext)s ] || exit 1
%(bin)s/rosetta_scripts.%(binext)s %(additional_flags)s @options_LAM_tag -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log.LAM_tag

test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

#Test LoopAnalyzerMover with loop file input
[ -x %(bin)s/rosetta_scripts.%(binext)s ] || exit 1
%(bin)s/rosetta_scripts.%(binext)s %(additional_flags)s @options_LAM_file -database %(database)s -run:constant_seed -nodelay  2>&1 \
    | egrep -vf ../../ignore_list \
    > log.LAM_file

test "${PIPESTATUS[0]}" != '0' && exit 1 || true  # Check if the first executable in pipe line return error and exit with error code if so

