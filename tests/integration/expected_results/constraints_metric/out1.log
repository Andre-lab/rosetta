core.init: command: ROSETTA/source/bin/rosetta_scripts.default.macosclangdebug -database ROSETTA/database -parser:script_vars whichmetric=metric1 -testing:INTEGRATION_TEST -in:file:s xml/1l2y.pdb -in:file:fullatom -parser:protocol xml/test.xml
basic.random.init_random_generator: Constant seed mode, seed=1111111 seed_offset=0 real_seed=1111111
basic.random.init_random_generator: RandomGenerator:init: Normal mode, seed=1111111 RG_type=mt19937
protocols.jd2.PDBJobInputter: Instantiate PDBJobInputter
protocols.jd2.PDBJobInputter: PDBJobInputter::fill_jobs
protocols.jd2.PDBJobInputter: pushed xml/1l2y.pdb nstruct index 1
protocols.evaluation.ChiWellRmsdEvaluatorCreator: Evaluation Creator active ... 
protocols.jd2.PDBJobInputter: PDBJobInputter::pose_from_job
protocols.jd2.PDBJobInputter: filling pose from PDB xml/1l2y.pdb
core.import_pose.import_pose: File 'xml/1l2y.pdb' automatically determined to be of type PDB
protocols.rosetta_scripts.RosettaScriptsParser: dock_design_filename=xml/test.xml
protocols.rosetta_scripts.RosettaScriptsParser: Variable substitution will occur with the following values: '%%whichmetric%%'='metric1';  
protocols.rosetta_scripts.RosettaScriptsParser: Substituted script:
<ROSETTASCRIPTS>
	<SCOREFXNS>
		<ScoreFunction name="r15_cst" weights="ref2015_cst.wts" />
	</SCOREFXNS>
	<RESIDUE_SELECTORS>
		<Index name="select_first_ten" resnums="1-10" />
	</RESIDUE_SELECTORS>
	<SIMPLE_METRICS>
		<ConstraintsMetric name="metric1" custom_type="FULL_" />
		<ConstraintsMetric name="metric2" custom_type="PARTIAL_" residue_selector="select_first_ten" />
	</SIMPLE_METRICS>
	<MOVERS>
		<AddConstraintsToCurrentConformationMover name="add_csts"
			use_distance_cst="false" coord_dev="1.35" cst_weight="1.19"
			CA_only="true"
		/>
	</MOVERS>
	<PROTOCOLS>
		<Add mover="add_csts" />
		<Add metrics="metric1" />
	</PROTOCOLS>
	<OUTPUT scorefxn="r15_cst" />
</ROSETTASCRIPTS>
protocols.rosetta_scripts.RosettaScriptsParser: Generating XML Schema for rosetta_scripts...
protocols.rosetta_scripts.RosettaScriptsParser: ...done
protocols.rosetta_scripts.RosettaScriptsParser: Initializing schema validator...
protocols.rosetta_scripts.RosettaScriptsParser: ...done
protocols.rosetta_scripts.RosettaScriptsParser: Validating input script...
protocols.rosetta_scripts.RosettaScriptsParser: ...done
protocols.rosetta_scripts.RosettaScriptsParser: Parsed script:
<ROSETTASCRIPTS>
	<SCOREFXNS>
		<ScoreFunction name="r15_cst" weights="ref2015_cst.wts"/>
	</SCOREFXNS>
	<RESIDUE_SELECTORS>
		<Index name="select_first_ten" resnums="1-10"/>
	</RESIDUE_SELECTORS>
	<SIMPLE_METRICS>
		<ConstraintsMetric custom_type="FULL_" name="metric1"/>
		<ConstraintsMetric custom_type="PARTIAL_" name="metric2" residue_selector="select_first_ten"/>
	</SIMPLE_METRICS>
	<MOVERS>
		<AddConstraintsToCurrentConformationMover CA_only="true" coord_dev="1.35" cst_weight="1.19" name="add_csts" use_distance_cst="false"/>
	</MOVERS>
	<PROTOCOLS>
		<Add mover="add_csts"/>
		<Add metrics="metric1"/>
	</PROTOCOLS>
	<OUTPUT scorefxn="r15_cst"/>
</ROSETTASCRIPTS>
core.scoring.ScoreFunctionFactory: SCOREFUNCTION: ref2015
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBPoly1D.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBFadeIntervals.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/HBEval.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/DonStrength.csv
basic.io.database: Database file opened: scoring/score_functions/hbonds/ref2015_params/AccStrength.csv
basic.io.database: Database file opened: scoring/score_functions/rama/fd/all.ramaProb
basic.io.database: Database file opened: scoring/score_functions/rama/fd/prepro.ramaProb
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.all.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.gly.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.pro.txt
basic.io.database: Database file opened: scoring/score_functions/omega/omega_ppdep.valile.txt
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/P_AA_n
core.scoring.P_AA: shapovalov_lib::shap_p_aa_pp_smooth_level of 1( aka low_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/P_AA_pp/shapovalov/10deg/kappa131/a20.prop
core.scoring.etable: Starting energy table calculation
core.scoring.etable: smooth_etable: changing atr/rep split to bottom of energy well
core.scoring.etable: smooth_etable: spline smoothing lj etables (maxdis = 6)
core.scoring.etable: smooth_etable: spline smoothing solvation etables (max_dis = 6)
core.scoring.etable: Finished calculating energy tables.
basic.io.database: Database file opened: scoring/score_functions/PairEPotential/pdb_pair_stats_fine
basic.io.database: Database file opened: scoring/score_functions/InterchainPotential/interchain_env_log.txt
basic.io.database: Database file opened: scoring/score_functions/InterchainPotential/interchain_pair_log.txt
basic.io.database: Database file opened: scoring/score_functions/EnvPairPotential/env_log.txt
basic.io.database: Database file opened: scoring/score_functions/EnvPairPotential/cbeta_den.txt
basic.io.database: Database file opened: scoring/score_functions/EnvPairPotential/pair_log.txt
basic.io.database: Database file opened: scoring/score_functions/EnvPairPotential/cenpack_log.txt
core.scoring.ramachandran: shapovalov_lib::shap_rama_smooth_level of 4( aka highest_smooth ) got activated.
basic.io.database: Database file opened: scoring/score_functions/rama/shapovalov/kappa25/all.ramaProb
protocols.jd2.parser.ScoreFunctionLoader: defined score function "r15_cst" with weights "ref2015_cst.wts"
core.select.residue_selector.util: [ WARNING ] Selector name is empty!
protocols.rosetta_scripts.RosettaScriptsParser: Defined mover named "add_csts" of type AddConstraintsToCurrentConformationMover
protocols.rosetta_scripts.ParsedProtocol: ParsedProtocol mover with the following settings
protocols.rosetta_scripts.ParsedProtocol: Added mover "add_csts"
core.simple_metrics.util: Added simple metric ConstraintsMetric.
protocols.rosetta_scripts.ParsedProtocol: Added metrics: "metric1"
protocols.jd2.PDBJobInputter: PDBJobInputter::pose_from_job
protocols.jd2.PDBJobInputter: filling pose from saved copy xml/1l2y.pdb
protocols.rosetta_scripts.ParsedProtocol: =======================BEGIN MOVER AddConstraintsToCurrentConformationMover - add_csts=======================
protocols.constraint_movers.AddConstraintsToCurrentConformationMover: Using SOG function
protocols.rosetta_scripts.ParsedProtocol: =======================BEGIN METRIC metric1=======================
protocols.rosetta_scripts.ParsedProtocol: =======================END METRIC metric1=======================
protocols.rosetta_scripts.ParsedProtocol: setting status to success
basic.io.database: Database file opened: scoring/score_functions/elec_cp_reps.dat
core.scoring.elec.util: Read 40 countpair representative atoms
core.pack.dunbrack.RotamerLibrary: shapovalov_lib_fixes_enable option is true.
protocols.jd2.JobDistributor: no more batches to process... 
basic.citation_manager.CitationManager: 
The following Rosetta modules were used during this run of Rosetta, and should be cited:

rosetta_scripts Application's citation(s):
Fleishman SJ, Leaver-Fay A, Corn JE, Strauch E-M, Khare SD, Koga N, Ashworth J, Murphy P, Richter F, Lemmon G, Meiler J, and Baker D.  (2011).  RosettaScripts: A Scripting Language Interface to the Rosetta Macromolecular Modeling Suite.  PLoS ONE 6(6):e20161.  doi: 10.1371/journal.pone.0020161.


The following UNPUBLISHED Rosetta modules were used during this run of Rosetta.  Their authors should be included in the author list when this work is published:

ConstraintsMetric SimpleMetric's author(s):
Vikram K. Mulligan, Systems Biology, Center for Computational Biology, Flatiron Institute <vmulligan@flatironinstitute.org>  (Wrote the ConstraintsMetric.)


