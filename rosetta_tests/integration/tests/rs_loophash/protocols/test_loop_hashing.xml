This protocol finds loop conformations that are compatible with binding the double-Val endonuclease, but are incompatible with binding the wildtype endonuclease (E9). These loop conformations can presumably be refined/designed for specificity.
<dock_design>
	        <TASKOPERATIONS>
            <RestrictToRepacking name=restrict/>
            <IncludeCurrent name=keep_curr/>
						<ProteinInterfaceDesign name=pido design_chain2=0/>
						<InitializeFromCommandline name=init/>
						The following is for making the remodeled loop poly-ala
						<ThreadSequence name=ala_loop target_sequence="AAAAAAAA" start_res=335/>
        </TASKOPERATIONS>

   <SCOREFXNS>
			<fa_score weights=score12_full/>
			<cen_score weights=score3/>
   </SCOREFXNS>
   <FILTERS>
			<ScoreType name=fa_filter scorefxn=fa_score score_type=total_score threshold=-10/>
			<ScoreType name=cen_filter scorefxn=cen_score score_type=total_score threshold=100/>
			<Ddg name=high_binding threshold=-15/> this isn't very good, but we're modeling against a double-Val endonuclease
			<Ddg name=low_binding threshold=-10/>
			<CompoundStatement name=unfavorable_binding>
				<AND filter_name=true_filter/>
				<NAND filter_name=low_binding/>
			</CompoundStatement>
    </FILTERS>
    <MOVERS>
			<AtomTree name=tree docking_ft=1/>anchor_res=19A res_num=170B connect_to=CB connect_from=CB/> this is important to make sure that relax don't change the rigidbody disposition
			<FastRelax name=relax scorefxn=score12 batch=1 task_operations=init,restrict,keep_curr,pido>
				<MoveMap>
					<Jump number=1 setting=0/>
				</MoveMap>
			</FastRelax>
			<PackRotamersMover name=make_ala_loop task_operations=ala_loop/>
			<LoopHash name=loophash_H2 start_res_num=25H stop_res_num=32H loop_sizes=3 ncentroid=32 db_path="./"/> batch_size=8 relax_move=relax
			<build_Ala_pose name=alapose partner1=1 partner2=1/>
     </MOVERS>
	<PROTOCOLS>
		Add mover=alapose/>
		Add mover=tree/>
		<Add mover=loophash_H2/>
		Add filter=bind_new_dont_bind_wt/>
	</PROTOCOLS>
</dock_design>
