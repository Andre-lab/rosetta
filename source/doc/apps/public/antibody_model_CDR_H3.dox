// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.
// (C) 199x-2009 University of Washington
// (C) 199x-2009 University of California Santa Cruz
// (C) 199x-2009 University of California San Francisco
// (C) 199x-2009 Johns Hopkins University
// (C) 199x-2009 University of North Carolina, Chapel Hill
// (C) 199x-2009 Vanderbilt University


///@author Jianqing Xu (xubest@gmail.com), Daisuke Kuroda (dkuroda1981@gmail.com), Oana Lungu (olungu@utexas.edu), Jeffrey Gray (jgray@jhu.edu)

/*!

@page antibody_model_CDR_H3 Documents for RosettaAntibody3: c). Modeling CDR H3 and Optimize VL-VH simultaneously



@section metadata Metadata

Last edited 4/25/2013.  Corresponding PI Jeffrey Gray (jgray@jhu.edu).

@section code Code and Demo
@li Application source code: 
@verbatim
rosetta/rosetta_source/src/apps/pilot/jianqing/antibody_model_CDR_H3.cc
@endverbatim
@li Main mover source code:  
@verbatim
rosetta/rosetta_source/src/protocols/antibody2/AntibodyModelerProtocol.cc.cc
@endverbatim
@li To see demos of some different use cases see integration tests located in 
@verbatim
rosetta/rosetta_tests/integration/antibody_protocol_* (antibody_protocol_using_KIC_loop_mover, antibody_protocol_using_CCD_loop_mover).
@endverbatim

To run Rosetta3Antibody, type the following in a command line:
@verbatim
[path to executable]/antibody_model_CDR_H3.[platform|linux/mac][compile|gcc/ixx]release –database [path to database] @options
@endverbatim

Note: these demos will only generate one decoy. To generate a large number of decoys you will need to add –nstruct N (where N is the number of decoys to build) to the list of flags.



@section references References

We recommend the following articles for further studies of RosettaDock methodology and applications:
@li J. Xu, D. Kuroda & J. J. Gray, “RosettaAntibody3: Object-Oriented Designed Protocol and Improved Antibody Homology Modeling.” (2013) in preparation
@li A. Sivasubramanian,* A. Sircar,* S. Chaudhury & J. J. Gray, "Toward high-resolution homology modeling of antibody Fv regions and application to antibody-antigen docking,"  Proteins 74(2), 497-514 (2009)

@section purpose Purpose 
Determine the structure of antibody homology models by combining VL-VH docking (using docking protocol) and H3 loop modeling (loop modeling protocol ).

@section input Input Files
<ol><li>
starting structure, mandatory  (e.g. input.pdb) <br>
    a). The input antibody file needs to be Chothia numbered. <br>
    b). It can be an crystal structure  <br>
    c). or homology model (check Work Flow and Graft Protocol) <br>
</li><li>
constraint file, optional, but recommended (e.g. cter_constraint) <br>
	a). Purpose: provide constraints potential to constraint H3 cterminal 
</li></ol>


@section flags Flags
<b>
Antibody Flags:
</b>
@verbatim
-antibody::remodel              perturb_kic
-antibody::snugfit              true
-antibody::refine               refine_kic
-antibody::cter_insert          false
-antibody::flank_residue_min    true
-antibody::bad_nter             false
-antibody::h3_filter            true
-antibody::h3_filter_tolerance  20
-antibody:constrain_cter
-antibody:constrain_vlvh_qq
-constraints:cst_file ./inputs/constraint_file
-nstruct 2000
-s ./inputs/FR02.pdb
-in:file:native ./inputs/LH_renumbered.pdb
-out:file:scorefile score.fasc
-run:multiple_processes_writing_to_one_directory
@endverbatim

<b>
Packing Flags:
</b>
@verbatim
-ex1
-ex2
-extrachi_cutoff 0
@endverbatim


<b>
Next Generation KIC (NGK) Flags:
</b>

(personal communication with Amelie Stein in Tanja Kortemme’s lab, detailed explanations should be in the NGK documentation (@ref next_generation_KIC) for the following flags)

@verbatim
-kic_bump_overlap_factor 0.36
-corrections:score:use_bicubic_interpolation false
-loops:legacy_kic false
-loops:kic_min_after_repack true
-loops:kic_omega_sampling
-loops:allow_omega_move true
-loops:ramp_fa_rep
-loops:ramp_rama
-loops:outer_cycles 5
-loops:kic_rama2b (takes 5G memory, one can turn this off if your computer cluster cannot handle such big memory job)
@endverbatim



<b>
Detailed Description of Flags:
</b>

@verbatim
-antibody::remodel 
@endverbatim

@li Description: <br>
	Model the H3 loop in centroid mode. It uses the loop_perturb object in the loop modeling protocol <br>

@li options: <br>
	perturb_kic <br>
	perturb_ccd (Note CCD has not been well tested) <br>

@verbatim
-antibody::snugfit
@endverbatim

@li Description: <br>
	Optimize VL-VH orientational via L-H docking <br>

@li options:  <br>
	true or false  <br>

@verbatim
-antibody::refine 
@endverbatim

@li Description: <br>
	High resolution refinement of H3 loop. It uses the loop_refne objet in the loop modeling protocol <br>

@li options: <br>
	refine_kic <br>
	refine_ccd (Note CCD has not been well tested) 

@verbatim
-antibody:cter_insert false
@endverbatim

@li Description: <br>
	a). This flag was originally designed to read a file called “H3_CTERM”, in which you can find many 4 residue fragments from many antibody H3 c_terminal backbone coordinates. The idea is that: if you can use bioinformatics rules to predict Kink/Extend, you can insert a Kink/Extend fragment from “H3_CTERM” file to the target H3 sequence structure. This is expected to reduce sampling assuming the bioinformatics is reliable. Please realize that this “cter_insert” only happens in low resolution loop building.  My previous tests showed, this step may help CCD (legacy CCD), but not very useful in KIC. CCD_refine randomly chose residues to do small/shear moves, but KIC_refine do the entire loop backbone movement collectively because it solves polynomials and get the whole set of backbone angles. <br>
	b). Because it is not very useful for KIC, we can turn it off. However, you may find it is weird that the code still asks “H3_CTERM” file. This is a small bug I should fix, but this bug does not affect anything. Just copy the “H3_CTERM” file, the code will read this file, but do nothing, as you set “-antibody:cter_insert false”. The reason for asking this file is because I put the function of reading “H3_CTERM” in the constructor of one class, so the default is to read the file and decide what to do based on the flag of “-antibody:cter_insert”. <br>
	c). By the way, there is only one “H3_CTERM” file for all cases, you can copy paste to any antibody target.. The questions is what about if I already use “-antibody:cter_insert true” in my KIC? My previous test showed this has no effects to the final results.<br>
 
@li options: <br>
	true or false 


@verbatim
-antibody:flank_residue_min true
@endverbatim

@li Description:<br>
	Set the H3 stems (default 2 residue each side on framework) on the framework to be adjustable of H3 into the movemap of minimization step in H3 loop modeling.

@li options:<br>
	true or false

@verbatim
-antibody:bad_nter false
@endverbatim

@li Description:<br>
	a). This is Rosetta2 style (Aroop did) to make up for the bad grafting of H3, because bad H3 grafting can change the coordinates of H3 stems. If you already used the flag “-antibody::h3_no_stem_graft” in grafting (pay attention, grafting) H3, then stem of H3 does not get changed. You can set “–antibody:bad_nter false”. <br>
	b). So the question may be … do we have “-antibody:bad_cter” ? The answer is no, as we have so many ways to deal with and always do something to the c_terminal, so it is ok even the grafting change the cterminal. 
Simple answer: set it to “false” if you H3 stems are good. 

@li options:<br>
	ture or false


@verbatim
-antibody:h3_filter true
-antibody:h3_filter_tolerance 20
@endverbatim

@li Description:<br>
	a). Sometimes you are very confident about the h3 Kink/Extend prediction made by bioinformatics rules, as the rules has ~90% probability to be correct. So you want the loop modeling (CCD or KIC) to give you predicted Kink or Extend conformation, otherwise filter it and do the loop modeling again. There is possibility that you may never get what you predicted, and the loop modeling just try again and again and takes forever, that’s why we have the “-antibody:h3_filter_tolerance 20” to restrict the maximum tries to be 20. You can change the value to smaller if you want. <br>
	b). If you think it is inappropriate to trust the bioinformatics rules, you can set “-antibody:h3_filter false”. The “-antibody:h3_filter_tolerance” flag will be invalid automatically. <br>
	
@li options:<br>
	true of false<br>
	a number


@verbatim
-antibody:constrain_cter
-antibody:constrain_vlvh_qq
-constraints:cst_file ./constraint_file
@endverbatim

@li Description: <br>
	a). What it is doing is still constraining the c_terminus of H3. Meaning that: “antibody:h3_filter” is too slow, “-antibody:cter_insert” is useless for KIC. Let me just constrained the H3 c_terminus to be Kink/Extend.<br>
b). “-antibody:constrain_cter” or “-antibody:constrain_vlvh_qq” must be specified in order to use the the prepared constraint file. <br>
c). “-antibody:constrain_cter” and “-antibody:constrain_vlvh_qq” can be both specified <br>
d) Example of constraint file (one line or two lines like below) <br>
Dihedral CA 220 CA 221 CA 222 CA 223 SQUARE_WELL2 0.5233 0.6978 200 <br>
AtomPair CD 38L CD 39H LINEAR_PENALTY 4.1 0 0.4 400 <br>

@li Options:<br>
	ture or false <br>
	local of the constraint file <br>



<b>
Additional Description of constraint file:
</b>

<ol><li>
Dihedral CA 220 CA 221 CA 222 CA 223 SQUARE_WELL2 0.5233 0.6978 200 <br>
	1). To constrain the c-terminal of H3 to be Kink/Extend <br>
	2). -220, 221, 222, 223 are all pose number of the H3 cterminus residues. In PDB numbering (Chothia), they are supposed to be H100X, H101,H102, H103. For different antibody, pose number may/should be changed. <br>
	3). SQUARE_WELL2 is the square well potential <br>
	4). Middle=30 degree (0.5233), Range=40 degree (0.6978), Well depth=200. So we are constraining the c_terminal region to -10<angle<70 , this is the old definition of KINK. This can be changed.<br>
	5). For cases predicted to be extended, it is not clear which degree to use to constrain, as Extend H3 is much more diversified. One can try 125-185 degree, or just do not use constrain, and do not use H3_filter, and run much more decoys.

</li><li>
AtomPair CD 38L CD 39H LINEAR_PENALTY 4.1 0 0.4 400
	1). To constrain two GLN, one is on L chain, the other is on H chain, they form Hydrogen bond at the L-H interface
	2). “CD” is the the carbon on GLN bonding to Nitrogen and Oxygen <br>
	3). 38L means L chain 38, and 39H  means H chain 39. They are GLN forming hydrogen bond. <br>
	4). LINEAR_PENALTY potential, see details in constraint file <br>
	5). distance_constraint=4.1, well_depth=0,  width=0.4, slope=400, see the details in constraint file. <br>

</li></ol>

@section output Output
One antibody PDB structure with modeled H3 loop and optimized VL-VH orientation.

@section new_stuff New things since last release
This is the first public release in Rosetta3

@li Supports the modern job distributor (jd2).
@li Support for \ref constraint_file "constraints".

*/
