// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.
// (C) 199x-2009 University of Washington
// (C) 199x-2009 University of California Santa Cruz
// (C) 199x-2009 University of California San Francisco
// (C) 199x-2009 Johns Hopkins University
// (C) 199x-2009 University of North Carolina, Chapel Hill
// (C) 199x-2009 Vanderbilt University


///@author Robin Thottungal (raugust1@jhu.edu), Jeffrey Gray (jgray@jhu.edu)

/*!

@page docking_prepack_protocol Docking Prepack protocol (for Docking)



@section metadata Metadata

Last edited 7/18/10.  Corresponding PI Jeffrey Gray (jgray@jhu.edu).



@section code_demos Code and Demo
@li Application source code: <code>rosetta/rosetta_source/src/apps/public/docking/docking_prepack_protocol.cc</code>
@li Main mover source code: <code>rosetta/rosetta_source/src/protocols/docking/DockingPrepackProtocol.cc</code>
@li To see demos of some different use cases see integration tests located in <code>rosetta/rosetta_tests/integration/docking_prepack*</code> (docking_prepack_protocol).


To run docking_prepack, type the following in a commandline:
\verbatim
[path to executable]/docking_prepack_protocol.[platform|linux/mac][compile|gcc/ixx]release â€“database [path to database] @options
\endverbatim

@section refs References

We recommend the following articles for further studies of RosettaDock methodology and applications:
@li Gray, J. J.; Moughon, S.; Wang, C.; Schueler-Furman, O.; Kuhlman, B.; Rohl, C. A.; Baker, D., Protein-protein docking with simultaneous
optimization of rigid-body displacement and side-chain conformations. Journal of Molecular Biology 2003, 331, (1), 281-299.
@li Wang, C., Schueler-Furman, O., Baker, D. (2005). Improved side-chain modeling for protein-protein docking Protein Sci 14, 1328-1339.
@li Chaudhury, S., Berrondo, M., Weitzner, B. D., Muthu, P., Bergman, H., Gray, J. J.; (2011) Benchmarking and analysis of protein docking performance in RosettaDock v3.2. PLoSONE, Accepted for publication.

@section purpose Purpose


Use this application to prepare a protein-protein complex for docking via standard docking protocol.  In docking, the
side chains are only packed at the interface. Running docking prepack protocol ensures that the side chains outside
of the docking interface have a low energy conformation which is essential for scoring the decoys.


@section algorithm Algorithm

 The docking_prepack algorithm consists of three steps:
 @li Move the docking partners out of contact
 @li Side chain optimization of the unbound complex
 @li Bring the unbound partners back to the original orientation

 Note that in a default docking_prepack run, side chain optimization is performed by packing.
 Commandline options can be supplied to enable additional optimization (sc_min, rt_min).


@subsection modes Modes
@li <b>\ref docking_prepack_protocol "Docking_Prepack protocol"</b> -  additional optimization can
be achived through the option system.


@section inputs Input Files


The only required input file is a pdb file containing two proteins with different chain IDs.


@section options_docking_prepack Options

<table cellspacing=0 cellpadding=0 width=80%>
  <tr>
    <td width=30%>
	<b>Flag</b>
    </td>
    <td width=60%>
	<b>Description</b>
    </td>
    <td width=10%>
	<b>Type</b>
    </td>
  </tr>
</table>

@subsection protocol_options Basic protocol options

<table cellspacing=0 cellpadding=0 width=80%>

  <tr>
    <td width=30%>
	-docking:partners [P1_P2]<br>
	</td>
    <td width=60%>
	Prepacking is done by separating chain P1 and chain P2
	</td>
    <td width=10%>
	String
    </td>
  </tr>

  <tr>
    <td width=30%>
	-docking:partners LH_A (moves chain A around fixed chains L and H)
    </td>
    <td width=60%>
	Prepacking is done by separating chain A and LH complex. Note that this
	will be usefull if you are planning to do docking between chain A
	and LH complex.
    </td>
    <td width=10%>
	String
    </td>
  </tr>

</table>


@subsection Side-chain optimization Flags

<table cellspacing=0 cellpadding=0 width=80%>
  <tr>
    <td width=30%>
	-docking::dock_rtmin
    </td>
    <td width=60%>
	Does Rotomer trial with side-chain minimization (see Wang, C et al, 2005 in reference)
	(note: not currently implemented in docking)
	</td>
    <td width=10%>
	Boolean
    </td>
  </tr>
  <tr>
    <td width=30%>
	-docking::sc_min
    </td>
    <td width=60%>
	Does the side-chain global minimization over all the chi angles after
	packing.
    </td>
    <td width=10%>
	Boolean
    </td>
  </tr>
</table>

@subsection common_rosetta Relevant common Rosetta Flags

<table cellspacing=0 cellpadding=0 width=80%>
  <tr>
    <td width=30%>
	-s 1abc.pdb<br>
    </td>
    <td width=60%>
	1abc.pdb is the pdb file with the protein-protien complex
    </td>
  </tr>
  <tr>
    <td width=30%>
	-database [P]<br>
	-database [path to rosetta database folder]
    </td>
    <td width=60%>
	The Rosetta database.
    </td>
  </tr>
</table>



@section tips Tips



@section outputs Expected Outputs

        1 PDB file for each structure generated and a 1 scorefile for each run with scoring and name information for each structure generated.

@section new_stuff New things since last release

        Supports the modern job distributor (jd2).


*/
