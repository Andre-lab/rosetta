The files in this directory walks you through an example to help you
run the antibody modeler mode. Before proceeding you need to make sure
that you have done the following:
1. Update your code to make sure that you have the latest developments
2. Make sure that you check out the "antibody" directory in the trunk
3. Read the "antibody_readme.txt" file in the "antibody" directory and	 make sure that you follow all the instructions

After all the scripts and supporting files are in place untar the
"camelid_example.tgz" file. A description of the key files in tar
archieve is provided:
a. grafting_input <directory>		This contains all the fasta sequence files for the query. 
    i.  camelid.bash			A bash file to invoke the master
					wrapper script. The script takes the
					fasta files as an input and outputs a
					framework with everything except the
					CDR-H3. It also generates the fragment
					files for H3 modeling. It also creates
					build directory with a condor script
					to actually build <nstruct> number of
					homology models.
   ii.  query_h.fasta                   Fasta file containing the heavy chain sequence
   iv.  rampaths.txt                    Paths for various files needed by scripts 
    v.  utilities.txt                   Supporting file
b. build_input <directory>              This contains the files needed for
					modeling the CDR H3. These files are
					the output files generated by
					"camelid.bash". 
   i.  1xyz_build_loops.bash            Bash script that invokes rosetta to
					actually model the CDR-H3 loops. This
					is the most time consuming part of the
					protocol. For simplicity the nstruct
					is set to 1. However, for a normal run
					it should be 2000. The file created by
					"camelid.bash" actually has nstruct
					2000. I manually changed it to 1 for
					the purposes of this example.
   ii.  aaFR02_09_05.200_v1_3           Standard rosetta 9-mer fragment file
   iii. aaFR02_03_05.200_v1_3           Rosetta 3-mer fragment file appended with antibody fragments
   iv.  H3_CTERM			Special fragment file containing H3 base fragments 
   v.   hfr.pdb				Template structure from which heavy chain of query has been obtained 
   vii. paths.txt                       Standard rosetta paths file. Make sure this matches with your paths. Once
					again this should be set if you have followed instructions in "antibody_readme.txt"
   viii.FR02.pdb                        The output file of "camelid.bash"
					which has the all non-H3 CDRs grafted
					onto the framework regions. It
					contains the CDR-H3 region with the
					coordinates blanked out.
c. build_output <directory>             Files generated by the "1xyz_build_loops.bash" 
   i.  aaFR02_0001.pdb			Output decoy with ab initio built
				        CDR H1 and H3.	
   ii. aaFR02.fasc                      Scorefile with special columns:
       a. AA_H3                         Global rmsd of CDR H3 compared to input structure
       b. AB_H1                         Global rmsd of CDR H1 compared to input structure
       c. AB_H2                         Global rmsd of CDR H2 compared to input structure
       d. AF_constraint                 Constraint score that rewards di-sulfide formation between cystines in CDRs H1 & H3.  Also rewards atomic
                                        contacts for stretched-twisted CDR H3s.

Make sure that camelid.bash and rampaths.txt are modified to match
your paths. You should have completed this already if you have read
"antibody_readme.txt" in the "antibody" directory. You can merely copy
the rampaths.txt from "antibody/scripts/rampaths.txt" to overwrite
this local copy.

Once you have modified the "camelid.bash", after the run finishes,
you should have a build directory.

Finally, on execution of the "1xyz_build_loops.bash" script, we
actually generate the final homology models. We generally build 2000
of this (in this example, we build just one) and choose the top ten. 
