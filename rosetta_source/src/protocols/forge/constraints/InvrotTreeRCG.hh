// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.

/// @file   protocols/forge/constraints/InvrotTreeRCG.hh
///
/// @brief
/// @author Florian Richter, floric@u.washington.edu, may 2012




#ifndef INCLUDED_protocols_forge_constraints_InvrotTreeRCG_hh
#define INCLUDED_protocols_forge_constraints_InvrotTreeRCG_hh

//unit headers
#include <protocols/forge/constraints/InvrotTreeRCG.fwd.hh>

//package headers
#include <protocols/forge/remodel/RemodelConstraintGenerator.hh>

//project headers
#include <core/pose/Pose.fwd.hh>
#include <core/types.hh>

#include <protocols/toolbox/match_enzdes_util/AllowedSeqposForGeomCst.fwd.hh>
#include <protocols/toolbox/match_enzdes_util/InvrotTree.fwd.hh>

// C++headers

namespace protocols{
namespace forge{
namespace constraints{



/// @brief a RemodelConstraintGenerator wrapper that makes
/// the constraints generated by an InvrotTree available in
/// VLB
class InvrotTreeRCG : public remodel::RemodelConstraintGenerator
{

public:

	InvrotTreeRCG(
		toolbox::match_enzdes_util::InvrotTreeOP invrot_tree,
		toolbox::match_enzdes_util::AllowedSeqposForGeomCstCOP geomcst_seqpos
	);

 ~InvrotTreeRCG();

	virtual
	void
	generate_remodel_constraints(
		core::pose::Pose const & pose );


protected:

private:

	toolbox::match_enzdes_util::InvrotTreeOP invrot_tree_;

	toolbox::match_enzdes_util::AllowedSeqposForGeomCstCOP geomcst_seqpos_;

}; //class InvrotTreeRCG


} //namespace remodel
} //namespace forge
} //namespace protocols




#endif // INCLUDED_protocols_forge_remodel_InvrotTreeRCG_HH
