# -*- mode:python;indent-tabs-mode:nil;show-trailing-whitespace:t; -*-
#
# Project settings for rosetta sources
# (c) Copyright Rosetta Commons Member Institutions.
# (c) This file is part of the Rosetta software suite and is made available under license.
# (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
# (c) For more information, see http://www.rosettacommons.org. Questions about this can be
# (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.

#This source settings file is for public and curated applications only
#For pilot apps please see pilot_apps.src.settings.template
#for instructions

#NOTE public and curated apps cannot depend on sources in the devel project.
#Sources in the devel project are experimental protocols and thus may be
#unstable

#Each time you add a source for an application to this list please add
#a comment giving the location of the documentation for this application.
#Public applications require an command line and tutorial.
#Curated applications require a command line, tutorial, a description of
#the scientific benchmark, a literature reference if the application has
#been published, and the revision number from trunk with which the
#benchmark was completed..
#
########### KEEP DIRECTORIES AND FILES IN ALPHABETICAL ORDER ###########

sources = {
	"": [
	],
	"benchmark": [
		"benchmark",
	],
	"benchmark/scientific": [
		"ddg_benchmark",
		"design_contrast_and_statistic",
		"rotamer_recovery",
	],
	#"curated": [
	#],
	"public": [
		"AbinitioRelax",
		"backrub",
		"cluster",
		"combine_silent",
		"extract_pdbs",
		"fragment_picker",
		"idealize",
		"idealize_jd2",
		"minimize",
		"packstat",
		"relax",
		"sequence_tolerance",
		"SymDock",
		"vip",
	],
	"public/analysis": [
		"InterfaceAnalyzer",
		"score",
		"score_jd2",
	],
	"public/antibody": [
		"antibody_mode",
	],
	"public/boinc": [
		"minirosetta",
		"minirosetta_graphics",
	],
	"public/comparative_modeling": [
		"cluster_alns",
		#"fast_cm",
		"fix_alignment_to_match_pdb",
		"full_length_model",
		"score_aln",
		"score_aln2",
		"super_aln",
	],
	"public/ddg": [
		"ddg_monomer",
		"minimize_with_cst",
	],
	"public/design": [
		"fixbb",
		"mpi_msd",
		"sequence_recovery",
	],
	"public/docking": [
		"docking_prepack_protocol",
		"docking_protocol",
	],
	"public/electron_density": [
		"loops_from_density",
		"mr_protocols",
	],
	"public/enzdes": [
		"CstfileToTheozymePDB",
		"enzyme_design",
	],
	"public/flexpep_docking": [
		"BuildPeptide",
		"FlexPepDocking", # /* Barak,doc/public/flexpep_docking/barak/FlexPepDocking.dox, test/integration/tests/flexpepdock/ */
	],
	"public/interface_design/anchored_design": [
		"AnchoredDesign", # /* Steven Lewis, doc/apps/pilot/smlewis/anchored_design.dox, test/integration/tests/anchored_design/ */
		"AnchoredPDBCreator", # /* Steven Lewis, doc/apps/pilot/smlewis/AnchoredPDBCreator.dox, test/integration/tests/AnchoredPDBCreator/ */
		"AnchorFinder", # /* Steven Lewis, doc/apps/pilot/smlewis/AnchorFinder.dox, test/integration/tests/AnchorFinder/ */
	],
	"public/ligand_docking": [
		"extract_atomtree_diffs",
		"ligand_dock",
		"ligand_rpkmin",
                "select_best_unique_ligand_poses", # /* Ian Davis/Rocco Moretti, doc/apps/public/ligand_dock.dox, test/integration/tests/select_best_unique_ligand_poses/ */
	],
	"public/loop_modeling": [
		"loopmodel",
	],
	"public/match": [
		"gen_apo_grids",
		"gen_lig_grids",
		"match",
	],
	"public/membrane_abinitio": [
		"membrane_abinitio2",
	],
	"public/ncaa_utilities": [
		"make_rot_lib",
		"UnfoldedStateEnergyCalculator",
	],
	"public/pepspec": [
		"pepspec",
		"pepspec_anchor_dock",
	],
	"public/rna": [
		"rna_cluster",
		"rna_database",
		"rna_denovo",
		"rna_design",
		"rna_extract",
		"rna_helix",
		"rna_minimize",
		"rna_score",
	],
	"public/swa_rna": [
		#"swa_rna_main", #Not yet ready for release!
		#"swa_rna_util", #Not yet ready for release!
	],
	"public/rosetta_scripts": [
		"revert_design_to_native",
		"rosetta_scripts",
	],
	"public/rosettaDNA": [
		"rosettaDNA",
	],
	"public/scenarios": [
		"beta_strand_homodimer_design/exposed_strand_finder",
		"beta_strand_homodimer_design/homodimer_design",
		"beta_strand_homodimer_design/homodimer_maker",
		"ca_to_allatom", # /* Frank DiMaio, doc/apps/public/scenarios/ca_to_allatom.dox */
		"doug_dock_design_min_mod2_cal_cal",
		"FloppyTail", # /* Steven Lewis, doc/apps/public/scenarios/FloppyTail.dox, test/integration/tests/FloppyTail/ */
		"UBQ_E2_thioester", # /* Steven Lewis, doc/apps/public/scenarios/UBQ_E2_thioester.dox, test/integration/tests/UBQ_E2_thioester/ */
	],
}
include_path = [
]
library_path = [
]
libraries = [
]
subprojects = [
	"devel",
        "protocols.7",
        "protocols.6",
        "protocols_f.5",
        "protocols_e.5",
        "protocols_d.5",
        "protocols_c.5",
        "protocols_b.5",
        "protocols_a.5",
        "protocols_h.4",
        "protocols_g.4",
        "protocols_f.4",
        "protocols_e.4",
        "protocols_d.4",
        "protocols_c.4",
        "protocols_b.4",
        "protocols_a.4",
        "protocols.3",
        "protocols_b.2",
        "protocols_a.2",
        "protocols.1",
	"core.5",
	"core.4",
	"core.3",
	"core.2",
	"core.1",
	"basic",
	"numeric",
	"utility",
	"ObjexxFCL",
	"z",
	"cppdb",
	"sqlite3",
]
