# -*- mode:python;indent-tabs-mode:nil;show-trailing-whitespace:t; -*-
#
# Project settings for rosetta sources
# (c) Copyright Rosetta Commons Member Institutions.
# (c) This file is part of the Rosetta software suite and is made available under license.
# (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
# (c) For more information, see http://www.rosettacommons.org. Questions about this can be
# (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.

sources = {'protocols/checkpoint': ['Checkpoint', 'CheckPointer'],
 'protocols/evaluation': ['EvaluatorFactory',
                          'AlignEvaluator',
                          'PoseEvaluator',
                          'TimeEvaluator',
                          'PCA',
                          'util'],
 'protocols/filters': ['AbinitioBaseFilter',
                       'BasicFilters',
                       'COFilter',
                       'Filter',
                       'FilterCreator',
                       'FilterFactory',
                       'SAXSScoreFilter',
                       'PackerNeighborGraphFilter',
                       'PackStatFilter',
                       'RGFilter',
                       'ScoreCutoffFilter',
                       'SheetFilter',
                       'AtomicContactFilter',
                       'AtomicDistanceFilter',
                       'ContingentFilter',
                       'HolesFilter',
                       'TimeFilter',
                       'ShapeComplementarityFilter'],
 'protocols/idealize': ['idealize', 'IdealizeMover'],
 'protocols/jd2': ['ScoreMap',
                   'PoseInputStreamJobInputter',
                   'AtomTreeDiffJobInputter',
                   'AtomTreeDiffJobOutputter',
                   'BatchJobInputter',
                   'BOINCJobDistributor',
                   'DockDesignParser',
                   'FileJobOutputter',
                   'FileSystemJobDistributor',
                   'Job',
                   'LazySilentFileJobInputter',
                   'InnerJob',
                   'InnerMultiThreadingJob',
                   'MultiThreadingJob',
                   'JobDistributorFactory',
                   'JobDistributor',
                   'JobInputter',
                   'JobInputterFactory',
                   'JobInputterCreator',
                   'JobOutputter',
                   'JobOutputterFactory',
                   'JobOutputterCreator',
                   'MPIWorkPartitionJobDistributor',
                   'MPIWorkPoolJobDistributor',
                   'MPIFileBufJobDistributor',
                   'MPIMultiCommJobDistributor',
                   'MpiFileBuffer',
                   'Parser',
                   'PDBJobInputter',
                   'PDBJobOutputter',
                   'ScoreOnlyJobOutputter',
                   'ShuffleJobDistributor',
                   'SilentFileJobInputter',
                   'SilentFileJobOutputter',
                   'SingleFileBuffer',
                   'util',
                   'NoOutputJobOutputterCreator'],
 'protocols/jd2/archive': ['ArchiveManager',
                           'ArchiveBase',
                           'EvaluatedArchive',
                           'MPIArchiveJobDistributor'],
 'protocols/jd2/parser': ['BluePrint',
                          'DataLoader',
                          'DataLoaderCreator',
                          'DataLoaderFactory',
                          'FragmentReader',
                          'FragSetLoader',
                          'MonteCarloLoader',
                          'ScoreFunctionLoader',
                          'TaskOperationLoader'],
 'protocols/jobdist': ['Jobs',
                       'standard_mains',
                       'not_universal_main',
                       'JobDistributors'],
 'protocols/moves': ['CompositionMover',
                     'ConstraintSetMover',
                     'CyclicMover',
                     'DataMap',
                     'DOFHistogramRecorder',
                     'DsspMover',
                     'DME_FilterMover',
                     'FilterMover',
                     'FavorSequenceProfile',
                     'GenericMonteCarloMover',
                     'MonteCarloTest',
                     'MonteCarloRecover',
                     'GreenPacker',
                     'IfMover',
                     'IteratedConvergenceMover',
                     'JumpOutMover',
                     'MinMover',
                     'SaneMinMover',
                     'MissingDensityToJumpMover',
                     'MonteCarlo',
                     'ReplicaExchangeMC',
                     'MinPackMover',
                     'Mover',
                     'MoverCreator',
                     'MoverContainer',
                     'MoverFactory',
                     'MoverStatistics',
                     'MoverStatus',
                     'MutateResidue',
                     'NullMover',
                     'OutputMovers',
                     'PackRotamersMover',
                     'PackRotamersMoverLazy',
                     'PeptideStapleMover',
                     'ProlineFixMover',
                     'PyMolMover',
                     'RampingMover',
                     'RepeatMover',
                     'ResId',
                     'ReturnSidechainMover',
                     'RepackSidechainsMover',
                     'RepulsiveOnlyMover',
                     'RotamerTrialsMover',
                     'RotamerTrialsMinMover',
                     'SetReturningPackRotamersMover',
                     'SetTorsion',
                     'StructureRestrictor',
                     'TaskAwareMinMover',
                     'TorsionDOFMover',
                     'TrialMover',
                     'TrialCounter',
                     'util',
                     'WhileMover'],
 'protocols/rosetta_scripts': ['ParsedProtocol', 'SavePoseMover', 'util'],
 'protocols/smanager': ['smanager'],
 'protocols/viewer': ['marchingCubes',
                      'ConformationViewer',
                      'SilentObserver',
                      'triangleIterator',
                      'viewers',
                      'visualize']}

include_path = []
library_path = []
libraries = []
subprojects = ['core.5',
 'core.4',
 'core.3',
 'core.2',
 'core.1',
 'basic',
 'numeric',
 'utility',
 'ObjexxFCL',
 'z',
 'sqlite3',
 'cppdb']
