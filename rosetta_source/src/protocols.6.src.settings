# -*- mode:python;indent-tabs-mode:nil;show-trailing-whitespace:t; -*-
#
# Project settings for rosetta sources
# (c) Copyright Rosetta Commons Member Institutions.
# (c) This file is part of the Rosetta software suite and is made available under license.
# (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
# (c) For more information, see http://www.rosettacommons.org. Questions about this can be
# (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.

########### KEEP DIRECTORIES AND FILES IN ALPHABETICAL ORDER ###########

sources = {
"protocols/enzdes": [
	"AddorRemoveCsts",
	"BackboneSampler",
	"DesignVsNativeComparison",
	"enzdes_util",
	"EnzdesBaseProtocol",
	"EnzdesFixBBProtocol",
	"EnzdesFlexBBProtocol",
	"EnzdesJobInputter",
	"EnzdesJobOutputter",
	"EnzdesMovers",
	"EnzdesTaskOperations",
	"EnzFilters",
	"EnzRepackMinimize",
	"ModifyStoredLigandRBConfsMovers",
	"SecondaryMatchProtocol",
],
"protocols/hotspot_hashing": [
	"HotspotStub",
"HotspotStubSet",
],
"protocols/match": [
	"BumpGrid",
	"Hit",
	"Matcher",
	"MatcherMover",
	"MatcherTask",
	"MatchPositionModifiers",
	"MatchSet",
	"OccupiedSpaceHash",
	"VoxelSetIterator",
],
"protocols/match/downstream": [
	"ActiveSiteGrid",
	"ClassicMatchAlgorithm",
	"DownstreamAlgorithm",
	"DownstreamBuilder",
	"GeometrySecMatchRPE",
	"LigandConformerBuilder",
	"RigidLigandBuilder",
	"ScoringSecMatchRPE",
	"SecMatchEvaluatorFactory",
	"SecMatchResiduePairEvaluator",
	"SecondaryMatcherToDownstreamResidue",
	"SecondaryMatcherToUpstreamResidue",
],
"protocols/match/output": [
	"DownstreamRMSEvaluator",
	"LimitHitsPerRotamerFilter",
	"MatchConsolidator",
	"MatchEvaluator",
	"MatchFilter",
	"MatchGrouper",
	"MatchOutputter",
	"MatchProcessor",
	"OutputWriter",
	"PDBWriter",
	"PoseInserter",
	"ProcessorFactory",
	"SameChiBinComboGrouper",
	"SameRotamerComboGrouper",
	"SameSequenceGrouper",
	"UpstreamCollisionFilter",
	"UpstreamDownstreamCollisionFilter",
	"UpstreamHitCacher",
	"WriteKinemageOutputter",
	"WriteUpstreamCoordinateKineamge",
],
"protocols/match/upstream": [
	"OriginalScaffoldBuildPoint",
	"ProteinSCSampler",
	"ProteinUpstreamBuilder",
	"ScaffoldBuildPoint",
	"UpstreamBuilder",
	"UpstreamResTypeGeometry",
],
	"protocols/protein_interface_design": [
		"design_utils",
		"DockDesignFilterFactory",
		"ParserJobInputter",
		"read_patchdock",
		"ReportPSSMDifference",
		"util",
	],
	"protocols/protein_interface_design/filters": [
		"AverageDegreeFilter",
		"BindingStrainFilter",
		"BoltzmannFilter",
		"DeltaFilter",
		"DesignableResiduesFilter",
		"DisulfideFilter",
		"FilterScan",
		"HbondsToResidueFilter",
		"InterfaceHolesFilter",
		"RelativePoseFilter",
		"RelativeSegmentFilter",
		"RmsdFilter",
		"SequenceRecoveryFilter",
		"SpecificResiduesNearInterfaceFilter",
		"StubScoreFilter",
		"TorsionFilter",
	],
	"protocols/protein_interface_design/movers": [
		"AddChainBreak",
		"AddSidechainConstraintsToHotspots",
		"BackrubDDMover",
		"BestHotspotCstMover",
		"BuildAlaPose",
		"DesignMinimizeHbonds",
		"DisulfideMover",
		"DockAndRetrieveSidechains",
		"DumpPdb",
		"FavorNativeResiduePreCycle",
		"FavorNonNativeResiduePreCycle",
		"HotspotDisjointedFoldTreeMover",
		"HotspotHasherMover",
		"InterfaceRecapitulationMover",
		"LoopFinder",
		"LoopLengthChange",
		"LoopMoverFromCommandLine",
		"LoopOver",
		"LoopRemodel",
		"MapHotspot",
		"PeptideStapleDesignMover",
		"PlacementAuctionMover",
		"PlacementMinimizationMover",
		"PlaceOnLoop",
		"PlaceSimultaneouslyMover",
		"PlaceStubMover",
		"PlaceUtils",
		"PrepackMover",
		"ProteinInterfaceMultiStateDesignMover",
		"RandomMutation",
		"RepackMinimize",
		"SaveAndRetrieveSidechains",
		"SetAtomTree",
		"SetTemperatureFactor",
		"SetupHotspotConstraintsMover",
		"SpinMover",
		"Splice",
		"SubroutineMover",
		"TaskAwareCsts",
		"TryRotamers",
		"VLB",
	],
"protocols/seeded_abinitio": [
	"CAcstGenerator",
	"CloseFold",
	"CoordinateCst",
	"DefineMovableLoops",
	"GrowPeptides",
	"SeededAbinitio_util",
	"SeedFoldTree",
	"SeedSetupMover",
	"SwapSegment",
],
}
include_path = [
]
library_path = [
]
libraries = [
]
subprojects = [
	"protocols_b.5",
	"protocols_h.4",
	"protocols_g.4",
	"protocols_b.4",
	"protocols_a.4",
	"protocols.3",
	"protocols_a.2",
	"protocols_b.2",
	"protocols.1",
	"core.5",
	"core.4",
	"core.3",
	"core.2",
	"core.1",
	"basic",
	"numeric",
	"utility",
	"ObjexxFCL",
	"z",
	"sqlite3",
	"cppdb",
]
