# -*- mode:python;indent-tabs-mode:nil;show-trailing-whitespace:t; -*-
#
# Project settings for rosetta sources
# (c) Copyright Rosetta Commons Member Institutions.
# (c) This file is part of the Rosetta software suite and is made available under license.
# (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
# (c) For more information, see http://www.rosettacommons.org. Questions about this can be
# (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.

########### KEEP DIRECTORIES AND FILES IN ALPHABETICAL ORDER ###########

sources = {
	"devel": [
		"init",
                "svn_version",
                #"init.release",
	],
	"devel/cartesian_frags": [
		"CartesianFragment",
		"DNA_FragLib",
		"dna_util",
		"SafeID",
	],
	"devel/coupled_sidechains": [
		"CoupledSidechainProtocol2",
	],
	"devel/cstEnergyBalance": [
		"minimalCstRelaxUtil",
	],
	"devel/denovo_protein_design": [
		"CreateStartingStructureMover",
		"DesignRelaxMover",
		"SequenceFitnessMover",
		"SSClass",
		"util",
	],
	"devel/dna": [
		"base_movers",
		"ProteinDNA_Relax",
		"protocols",
		"relax_util",
		"MotifLoopBuild",
		"util_motif_loop",
		"util",
	],
	"devel/domain_assembly": [
		"domain_assembly",
		"domain_assembly_setup",
		"DomainAssemblyReader",
	],
	"devel/enzdes": [
		"DesignSilentStruct",
		"EnzdesRemodelProtocol",
	],
	"devel/fold_from_loops": [
		"FoldFromLoops_functions",
		"FoldFromLoopsMover",
	],
	#"devel/integrated_loop": [
	#	"CcdCloseMover",
	#	"LoopManager",
	#	"LoopModeler",
	#],
	"devel/inv_kin_lig_loop_design": [
		"Cloner",
		"Fragment",
		"Ints",
		"JumpManager",
		"Loop",
		"Mover",
		"Protocol",
		"ResID",
	],
	"devel/loop_creation": [
		"CCDLoopCloser",
		"FragmentLoopInserter",
		"IterativeLoophashLoopInserter",
		#"KICLoopCloser",
		"LoopCreationMover",
		"LoopCloser",
		"LoophashLoopInserter",
		"LoopInserter",
	],
	"devel/loop_extend": [
		"LoopExtendMover",
	],
	"devel/loop_grids": [
		"LoopGrid",
	],
	"devel/loophash_loopclosure": [
		"LoopHashLoopClosureMover",
	],
        "devel/matdes" : [
		"util",
                "TaskAwareSymMinMover",
                "Symmetrizer",
                "SymDofMover",
                "SymDofMoverSampler",
                "SymmetrizerSampler",
                "GenericSymmetricSampler",
                "BuildingBlockInterfaceOperation",
                "RestrictToNonzeroSASAOperation",
		"RestrictIdentitiesOperation",
		"OligomericAverageDegreeFilter",
		"SymUnsatHbondFilter",
		"AverageInterfaceEnergyFilter",
		"TaskAwareAlaScan",
		"StoreTaskMover",
		"STMStoredTask",
		"RetrieveStoredTaskOperation",
		"SaveResfileToDiskFilter",
		"TaskAwareSASAFilter",
		"InterfacePackingFilter",
		"ClashCheckFilter",
		"ExtractSubpose",
		"GetRBDOFValues",
		"MutationsFilter",
		"StoreCombinedStoredTasksMover",
		"StoreCompoundTaskMover",
        ],
	"devel/metal_interface": [
		"ZincHeterodimerMover",
		"AddZincSiteConstraints",
		"DualMonteCarlo",
		"FindClosestAtom",
		"MatchGrafter",
		"MetalSiteResidue",
		"ZincSiteFinder",
	],
	"devel/optest": [
		"A",
		"B1",
		"B2",
		"C1",
		"C2",
	],
        "devel/replica_docking": [
               "AddEncounterConstraintMover",
        #       "FrozenSidechainsMover",
               "InteractionScoreFilter",
	       "WrapFilterAsEvaluator",
	       "WrapFilterAsEvaluatorCreator",
               "ModulatedMover",
               "TempInterpolator",
               "ThermodynamicRigidBodyMover",
               "TempInterpolatorFactory",
               "TempWeightedMetropolisHastingsMover",
        ],
	"devel/residual_dipolar_coupling": [
		"RDC_energies",
		"RDC_main",
	],
	"devel/simple_options": [
		"option",
	],
        "devel/splice": [
		"RestrictToAlignedSegments", #moved to devel due to release embargo
		"Splice", #moved to devel due to release embargo
		"SpliceSegment", #moved to devel due to release embargo
        ],
	#"devel/ssrbrelax": [
	#	"SSRbClass",
	#	"SSrbrelax",
	#],
	"devel/vardist_solaccess": [
		"VarSolDRotamerDots",
	],
	"devel/znhash": [
		"ZnHash",
		"SymmZnMoversAndTaskOps",
	],
	#"path_rover": [
	#	"pathrover_DOFs_manager",
	#],
}
include_path = [
]
library_path = [
]
libraries = [
]
subprojects = [
	"protocols.7",
	"protocols.6",
	"protocols_f.5",
	"protocols_e.5",
	"protocols_d.5",
	"protocols_c.5",
	"protocols_b.5",
	"protocols_a.5",
	"protocols_h.4",
	"protocols_g.4",
	"protocols_f.4",
	"protocols_e.4",
	"protocols_d.4",
	"protocols_c.4",
	"protocols_b.4",
	"protocols_a.4",
	"protocols.3",
	"protocols_b.2",
	"protocols_a.2",
	"protocols.1",
	"core.5",
	"core.4",
	"core.3",
	"core.2",
	"core.1",
	"basic",
	"numeric",
	"utility",
	"ObjexxFCL",
	"z",
	"cppdb",
	"sqlite3",
]
