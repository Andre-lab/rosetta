# -*- mode:python;indent-tabs-mode:nil;show-trailing-whitespace:t; -*-
#
# Project settings for rosetta sources
# (c) Copyright Rosetta Commons Member Institutions.
# (c) This file is part of the Rosetta software suite and is made available under license.
# (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
# (c) For more information, see http://www.rosettacommons.org. Questions about this can be
# (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.

sources = {'protocols/abinitio': ['vs_test',
                        'AbrelaxApplication',
                        'AbrelaxMover',
                        'BrokerMain',
                        'ClassicAbinitio',
                        'ConstraintFragmentSampler',
                        'DomainAssembly',
                        'DoubleLayerKinematicAbinitio',
                        'FoldConstraints',
                        'FragmentSampler',
                        'IterativeAbrelax',
                        'IterativeBase',
                        'IterativeCentroid',
                        'IterativeFullatom',
                        'KinematicAbinitio',
                        'KinematicControl',
                        'KinematicTaskControl',
                        'LoopJumpFoldCst',
                        'MembraneAbinitio',
                        'PairingStatistics',
                        'ResolutionSwitcher',
                        'StrandConstraints',
                        'Template',
                        'Templates',
                        'TemplateJumpSetup',
                        'Protocol'],
 'protocols/jumping': ['JumpSetup',
                       'JumpSample',
                       'MembraneJump',
                       'PairingLibrary',
                       'DisulfPairingLibrary',
                       'DisulfPairingsList',
                       'RandomSheetBuilder',
                       'ResiduePairJump',
                       'ResiduePairJumpSetup',
                       'SameStrand',
                       'SheetBuilder',
                       'util'],
 'protocols/loop_build': ['LoopBuild',
                          'LoopMover_SlidingWindow',
                          'LoopMover_SlidingWindowCreator'],
 'protocols/noesy_assign': ['CrossPeak',
                            'CrossPeakInfo',
                            'CrossPeakList',
                            'PeakAssignmentResidueMap',
                            'PeakAssignment',
                            'Resonance',
                            'ResonanceList',
                            'PeakFileFormat',
                            'PeakFileFormat_Sparky',
                            'PeakFileFormat_xpk',
                            'DistanceScoreMover',
                            'PeakAssignmentParameters',
                            'PeakCalibrator',
                            'StructureDependentPeakCalibrator',
                            'StructureIndependentPeakCalibrator',
                            'NoesyModule',
                            'util'],
 'protocols/symmetric_docking': ['SymDockBaseProtocol',
                                 'SymDockProtocol',
                                 'SymDockingLowRes',
                                 'SymDockingHiRes',
                                 'SymRestrictTaskForDocking',
                                 'SymSidechainMinMover',
                                 'SymFoldandDockRbTrialMover',
                                 'SymFoldandDockSlideTrialMover',
                                 'SymFoldandDockMoveRbJumpMover'],
 'protocols/topology_broker': ['AsymFoldandDockClaimer',
                               'ClaimerMessage',
                               'ConstraintClaimer',
                               'CoordConstraintClaimer',
                               'CutBiasClaimer',
                               'DensityScoringClaimer',
                               'DofClaim',
                               'FibrilModelingClaimer',
                               'FoldandDockClaimer',
                               'FragmentClaimer',
                               'JumpClaimer',
                               'DisulfJumpClaimer',
                               'LoopFragmentClaimer',
                               'MembraneTopologyClaimer',
                               'MetalloClaimer',
                               'PseudocontactShiftEnergyController',
                               'PcsEnergyController',
                               'RigidChunkClaimer',
                               'SequenceClaimer',
                               'StartStructClaimer',
                               'TemplateFragmentClaimer',
                               'TemplateJumpClaimer',
                               'TopologyBroker',
                               'TopologyClaimer',
                               'TopologyClaimerFactory',
                               'util']}

include_path = []
library_path = []
libraries = []
subprojects = ['protocols_f.4',
 'protocols_e.4',
 'protocols_d.4',
 'protocols_c.4',
 'protocols_b.4',
 'protocols_a.4',
 'protocols.3',
 'protocols.2',
 'protocols.1',
 'core.5',
 'core.4',
 'core.3',
 'core.2',
 'core.1',
 'basic',
 'numeric',
 'utility',
 'ObjexxFCL',
 'z',
 'sqlite3',
 'cppdb']
