// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.
///
/// @file   coding_guidelines/UsingSubversion.dox
/// @brief  A Guide To Using Subversion on the Command Line
/// @author Kristian Kaufmann
///
/// last modified: 11/08/2008
///
///@page using_subversion A Guide to Using Subversion on the Command Line
///
///Subversion is a widely used easy to leard version control system. For an in depth view into subversion see the subversion manual online at http://svnbook.red-bean.com. Several svn clients have been developed including some very easy to use graphical user interfaces see http://subversion.tigris.org/links.html#clients. All the commands found here can be accessed in most GUI clients. The guide is under construction, but once complete will take the reader through the following processes
///- @ref svn_ls
///- @ref svn_checkout
///- Branching Rosetta into the workspace
///- Adding new directories and files to a working copy
///- Updating your working copy
///- Resolving conflicted files
///- Checking the status of a working copy
///- Committing modification of Rosetta to the repository
///- Examining differences between subversioned files
///- Merging changes from another another branch into your code
///- Switching your working copy from one branch to another.
///- Telling subversion to ignore files by editing properties
///
///Note that all of the topics covered here are also covered on the Rosetta Wiki. This page is a process oriented introduction which leads a beginning user through most of the tasks encountered during normal usage.
///
///Before looking at specific commands it is worth noting that subversion has a good help system directly on the command line. As this screenshot shows calling svn --help displays a pretty extensive list of available commands.
///
/// @image html svn_help.png
/// @image latex svn_help.eps width=14cm
///
///Each command also has a short but pretty comprehensive help statement which can be accessed by issuing the command with the --help flag.
/// @section svn_ls Exploring the subversion repository
///
///Two subversion or svn commands are particularly useful in browsing the soure repository on the cammand line. The first is the ls command. The ls or list command lists the contents of a URL in the repository. For example the screenshot below shows the content of the toplevel of the repository.
/// @image html svn_ls.png
/// @image latex svn ls.eps width=14cm
///
///The second command is the cat command. The cat command outputs the contents of a file in the repository to the stdout stream. For example the screenshot below displays the start of readme file in the toplevel of the mini directory.
/// @image html svn_cat.png
/// @image latex svn_cat.eps width=14cm
///
/// @section svn_checkout Checking out, Updating, Commiting changes for a local copy to the repository.
///
///In order to makes changes to the repository you have a check out a portion of the repository. For example let us check out a copy of the the doc/apps directory of mini rosetta.
/// @image html svn_co.png
/// @image latex svn_co.eps width=14cm
///
///Notice how the the command places the check files from the repository in the directory you specify. Now while you are making changes to your local copy of the doc/apps directory someone else may checkin changes such as a tutorial for the application they have created. To add the changes they made to your local copy you can use the svn update command.
///
///@image html svn_update.png
///@image latex svn_update.eps width=14cm
///
///This page is under Construction.
///Look at this wiki page for more information https://wiki.rosettacommons.org/index.php/Tools:Subversion
