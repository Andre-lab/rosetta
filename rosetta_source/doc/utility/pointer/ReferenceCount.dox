// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.

/// @file   utility/pointer/ReferenceCount.dox
/// @brief  Reference count base classes for intrusive reference-counted classes
/// @author Stuart G. Mentzer (Stuart_Mentzer@objexx.com)


/// @class utility::pointer::ReferenceCount
///
/// ReferenceCount is a base class for intrusive reference-counted classes
/// that is designed to work with owning_ptr.  A class that inherits from
/// ReferenceCount gets the machinery for shared-ownership management by
/// owning_ptr.  Having the root class of a single inheritance hierarchy
/// inherit from ReferenceCount makes all of the classes in its hierarchy
/// compatible with owning_ptr.
/// 
/// ReferenceCount can also be used in a multiple inheritance hierarchy if
/// the root class using virtual inheritance for ReferenceCount (to avoid
/// multiple instances of the counter if the inheritance hierarchy has
/// diamond-shaped inheritance relationships).  Because ReferenceCount is
/// not a pure interface class it is not suitable for use in a Decorator
/// pattern hierarchy because multiple copies of the counter would be
/// present: ReferenceCountMI should be used in those situations.


/// @class utility::pointer::ReferenceCountMI
/// 
/// ReferenceCountMI is a pure interface base class for multiple
/// inheritance Decorator pattern hierarchies needing reference counting.
/// 
/// To use ReferenceCountMI the root class in the hierarchy should
/// inherit from it virtually and the concrete classes should inherit
/// from the ReferenceCountMI_ implementation.
