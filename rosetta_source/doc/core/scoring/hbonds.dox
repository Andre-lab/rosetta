// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.
// (C) 199x-2008 University of Washington
// (C) 199x-2008 University of California Santa Cruz
// (C) 199x-2008 University of California San Francisco
// (C) 199x-2008 Johns Hopkins University
// (C) 199x-2008 University of North Carolina, Chapel Hill
// (C) 199x-2008 Vanderbilt University

/*!

@page hbonds Hydrogen Bond Energy Term

@section metadata Metadata
This document was written by Matthew O'Meara on 6/18/2008

The hydrogen bond energy term identifies and scores hydrogen bonds.

@secion hbevaltype HBEvalType

Each hydrogen bond has an HBEvalType that identifies what type it is.
All hydrogen bonds of a given type are treated in the same way.  If
one wanted to break out a class of hydrogen bonds to have different
behavior, a new HBEvalType should be created.

@section overview Design Overview

To use the hydrogen bond energy term there are three conceptual
steps. First identify all the relevent bonds, second classify the
hydrogen bonds based on their chemical type, environment, background
hbonds etc, and then third score the hydrogen bonds.

@secion identification Identification

The goal of the identification step is to create an HBondSet object
that contains exactly the hydrogen bonds of interest. If it containst
two many, then they will need to be filtered more later, if they
contain not enough then more will need to be found later, when all
that should happen in this step.

@li Create new HBondSet set to receive identified hbonds.  Set pass in or set hbond options for hbond_set. Call fill_hbond_set excluding unwanted hbonds to fill hbond_set.
@li Extract a portion of an exising HBondSet such as from pose.energies().data().get( HBOND_SET ).
@li Create HBondSet by giving explicit donor acceptor residues identify_hbonds_1way.


@section classification Classification

Currently hydrogen bonds are classified by backbone/sidechain
protein-dna / generic, and hybridization type of the acceptor (sp2,
sp3, ring).  These types are refined by sequence separation.  For
bonds involving protein backbones this indicates secondary structure.
Backbone-sidechain hydrogen bonds are split into short-range and
long-range.


Hydrogen bonds are classified by hbond_evaluation_type() in hbonds_geom.cc

@section evaluation Evaluation

Currently the evaluation for hydrogen bonds follows

Kortemme, T., A. V. Morozov and D. Baker (2003). "An
orientation-dependent hydrogen bonding potential improves prediction
of specificity and structure for proteins and protein-protein
complexes." J Mol Biol 326(4): 1239-59.

Jack Snoeyink has re-implemented it as a efficient polynomial evaulation.

The derivative evaulation follows what is described in,

Wedemeyer, W., Baker, D., "Efficient minimization of angle-dependent
potentials for polypeptides in internal coordinates", Proteins:
Structure, Function, and Bioinformatics Volume 53 Issue 2, Pages 262-272



@section definition Definition of Hydrogen Bonding

A hydrogen bond donor and a hydrogen bond acceptor are considered
hydrogen bonded if they contribute favorably to the overall energy.

Note: If there is a backbone-backbone hydrogen bond then neither the donor
nor the acceptor residues are allowed to participate in a
backbone-sidechain hydrogen bond.  According to Brian Kuhlman, this
was put in the early days of Rosetta because the hydrogen bond energy
term at the time put overly favored serines on helixes because they
would form backbone-backbone hbonds for the helix and
backbone-sidechain bonds away from the helix.




@section refactoring Refactoring and plan for improvments

1) Move options into HBondOptions class

2) Use emap to assign energies from hbonds

3) Only put hbonds in HBondSets that are actually relevent (rather than filtering when they are used)

4) Merge non-protein/non-dna hbond code with rest of hbond code.

5) Make new HBEvalTypes so evaluation and energy assignment can be handled uniformally

6) Clean up header files

7) Add a hbond unit test for energy evaluation over geometric parameter range

8) Add doxygen documentation for hbond code

Plans:

1) Create new HBEvalTypes based off of functional group of donor and
acceptor and secondary structure for protein backbone backbone bonds.

2) Implement improved 1d polynomials for new types.

3) Add "chi" out-of-plane dependence as a 4th geometric dimension

5) Implement evaluation functions for distributions with coupled parameters.


*/
