// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.
// (C) 199x-2009 University of Washington
// (C) 199x-2009 University of California Santa Cruz
// (C) 199x-2009 University of California San Francisco
// (C) 199x-2009 Johns Hopkins University
// (C) 199x-2009 University of North Carolina, Chapel Hill
// (C) 199x-2009 Vanderbilt University

/*!

@page loopmodeling Documentation for the loop modeling application

@section metadata Metadata
This document was edited Nov 1st 2008 by Yi Liu. This application in Rosetta3 was created by Michael Tyka, et al. Most of the contents are still based on the Rosetta++ loop tutorial written by Chu Wang 2007.


@section examples Examples
This file only contents loop relax example at this moment.
See <code>rosetta/rosetta_tests/integration/tests/loop_modeling</code> for an example loop relax run and input files.

@section refs References
@li Qian, B., Raman, S., Das, R., Bradley, P., McCoy, A.J., Read, R.J. and Baker D. (2007). High resolution protein structure prediction and the crystallographic phase problem. Nature. manuscript accepted.
@li Wang, C., Bradley, P. and Baker, D. (2007) Protein-protein docking with backbone flexibility. Journal of Molecular Biology, in press, DOI,http://dx.doi.org/10.1016/j.jmb.2007.07.050

@section purpose_algorithm  Purpose and Algorithm
This protocol was developed to be combined with Rosetta full atom structure refinement (relax mode) to streamline the task of comparative modeling. Briefly, it identifies structural variable regions from an ensemble of refined models by Rosetta fullatom refinement protocol and then models these loops using a protocol similar to the pose-based protocol.

@section inputs Input Files
@li Start pdbs: The template pdb file and must have real coordinates for all template residues plus the first and last residue of each loop region.
@li Loop file:
@verbatim
column1  "LOOP":     The loop file identify tag
column2  "integer":  Loop start residue number
column3  "integer":  Loop end residue number
column4  "integer":  Cut point residue number, >=startRes, <=endRes. default - let LoopRebuild choose cutpoint
column5  "float":    Skip rate. default - never skip
column6  "boolean":  Extend loop. Default false
@endverbatim
@li Fragment files

@section commands Command lines
You can run loop modeling with the following flags:
@verbatim
-in::file::fullatom
-in::file::s inputs/4fxn.start_0001.pdb
-loops::loop_file inputs/4fxn.loop_file
-loops::frag_sizes 9 3 1
-loops::frag_files  inputs/cc4fxn_09_05.200_v1_3.gz inputs/cc4fxn_03_05.200_v1_3.gz none
-loops::ccd_closure
-loops::random_loop
@endverbatim
Other combinable flags:
@verbatim
Centroid remodelling:  -loops::remodel [perturb_ccd|perturb_alc|quick_ccd|old_looprelax]
Fullatom refinement:  -loops::refine [refine_ccd|refine_alc]
FA Relax:  -loops::relax [fullrelax|shortrelax|fastrelax]
@endverbatim

For more information about loop modeling flags, please check the @ref full_options_list "full options list"

*/
