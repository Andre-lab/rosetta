// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.

///@author Barak Raveh
/*!

@page BuildPeptide Documentation for the BuildPeptide utility application

@section metadata Metadata
Last updated July 24, 2011 ; PI: Ora Schueler-Furman oraf@ekmd.huji.ac.il.

@section code_demos Code and Demo
@li Application source code: <code>src/apps/public/flexpep_docking/BuildPeptide.cc</code>
@li For a demonstration of a basic run of the BuildPeptide utility application, see <code>test/integration/tests/BuildPeptide</code>

@section purpose Purpose
Building an extended peptide or protein structure from a FASTA file (to help preparing input for peptide docking protocol, etc.).

@section inputs Input Files

BuildPeptide requires a fasta file in standard format as input.

@section ft_options Options

<div class="fragment"><pre class="fragment">
<table border=1 cellspacing=0 cellpadding=0>
  <tr>
	<td width=213>
   <b>Flag</span></b></p>
   </td>
   <td width=120>
   <b>Description</span></b></p>
   </td>
   <td width=99>
   <b>Type</b></p>
   </td>
  </tr>
 <tr><td>
   -in:file:fasta
  </td>
 <td>
   FASTA file with peptide sequence
  </td>
 <td>
   string
  </td>
</tr>
 <tr><td>
   -out:file:o
  </td>
 <td>
   output PDB file name
  </td>
 <td>
   string
  </td>
</tr>
</table>
</pre></div>

@section tips Tips - example usage

\verbatim
 BuildPeptide.{ext} -database ${mini_db} -in:file:fasta input.fasta -out:file:o peptide.pdb
\endverbatim

@section fpdock_outputs Expected Outputs

The output of a BuildPeptide run is a PDB-format file of the peptide in an extended full-atom conformation. Side-chain rotamers are arbitrary. This can be used for e.g., creating an initial structure for a \ref FlexPepDock "FlexPepDock" ab-initio run.

*/
