// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.

/*!

@page minirosetta Boinc minirosetta application usage and overview

@section metadata Metadata
The relevant Mini-Rosetta code is in minirosetta.cc
This document was written 22 Jan 2008 by David E. Kim and last updated 22 Jan 2008.

@section geninfo General Information
This document contains an overview of the "minirosetta" application and its
usage. Similar to the rosetta++ "all in one" application, "minirosetta" runs different
modes or protocols depending on command line arguments. "minirosetta" is
developed for running large scale distributed tasks on
<a href=http://boinc.bakerlab.org/rosetta>Rosetta\@home</a> using
<a href=http://boinc.berkeley.edu>Boinc</a>.

@section building Building
@subsection commandlineapp Command line application
To build "minirosetta" as a command line application that can be run on local
clusters (does not depend on Boinc), use the following scons
commands as examples. General rosetta scons build options apply. Use "scons -h"
for build system usage information.

- Debug build
@code
scons bin/minirosetta.gcclinuxdebug
@endcode

- Release build
@code
scons mode=release bin/minirosetta.gcclinuxrelease
@endcode

@subsection boincapp Boinc application
To build "minirosetta" as a Boinc application, use the following scons commands
as examples. Note: extras=boinc,static must be used to create a static
application for running on Boinc.

- Debug build
@code
scons extras=boinc,static bin/minirosetta.gcclinuxdebug
@endcode

- Release build
@code
scons extras=boinc,static mode=release bin/minirosetta.gcclinuxrelease
@endcode

@section boincopts Boinc optional arguments

@code
[-in::file::zip <zipped archive>]
@endcode

A zipped archive file. Unzips contents into the run directory using the boinc_zip
library from BOINC before running the rosetta protocol. This is useful for input files
and directories like the minirosetta database. For example, all input files can
be zipped into one compressed archive file.

@section protocols Protocols
The following protocols can be run.

@subsection classicabrelax Classic Abinitio and Relax ( -protocol abrelax )
This protocol runs classic abinitio and relax for de novo protein fold
prediction. The relevant code is in classic_abinitio_relax_impl.cc

@subsubsection classicabrelaxusage Basic Usage

@code
minirosetta [-protocol abrelax] [-fasta <fasta file> or -native <native pdb>] [-frag3 <3mer frag file>] [-frag9 <9mer frag file>] [options..]
@endcode

@subsubsection classicabrelaxusageopts Optional arguments
Additional standard minirosetta and protocol specific arguments also apply.

@code
[-nstruct <int>]
@endcode

number of decoys (default 1).

@code
[-increase_cycles <float>]
@endcode

Increase number of cycles at each stage by this factor.

@code
[-abinitio::relax]
@endcode

Do relax after abinitio.

@code
[-out::file::silent <silent file name>]
@endcode

Name of silent output file. Default is "default.out".

@code
[-out::silent_gz]
@endcode

Gzip silent output file.

@code
[-checkpoint]
@endcode

Turn checkpointing on with default time interval (5 minutes).

@code
[-checkpoint_interval <int>]
@endcode

Turn checkpointing on with given time interval in seconds.



@subsection liganddock Ligand Dock ( -protocol ligand_dock )

Under construction......


*/
