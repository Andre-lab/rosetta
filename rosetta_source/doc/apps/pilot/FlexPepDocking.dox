// -*- mode:c++;tab-width:2;indent-tabs-mode:t;show-trailing-whitespace:t;rm-trailing-spaces:t -*-
// vi: set ts=2 noet:
//
// (c) Copyright Rosetta Commons Member Institutions.
// (c) This file is part of the Rosetta software suite and is made available under license.
// (c) The Rosetta software is developed by the contributing members of the Rosetta Commons.
// (c) For more information, see http://www.rosettacommons.org. Questions about this can be
// (c) addressed to University of Washington UW TechTransfer, email: license@u.washington.edu.
// (C) 199x-2009 University of Washington
// (C) 199x-2009 University of California Santa Cruz
// (C) 199x-2009 University of California San Francisco
// (C) 199x-2009 Johns Hopkins University
// (C) 199x-2009 University of North Carolina, Chapel Hill
// (C) 199x-2009 Vanderbilt University

/*!

@page FlexPepDocking Documentation for the Flexible Peptide Docking application (initial version)

@section metadata Metadata                                                                                          This document was edited May 26th 2009 by Barak Raveh. This application in mini was created by Barak Raveh and Nir London.

@section examples Examples
See <code>mini/test/integration/tests/flexpepdocking</code> for an example of Flexible Peptide Docking and input files.

@section refs References
@li Publication is underway, please contact Barak, Nir or Ora for updated details (barak.raveh@mail.huji.ac.il / londonir@gmail.com / oraf@ekmd.huji.ac.il)

@section purpose_algorithm  Purpose and Algorithm
This is a pilot version for a flexible peptide docking protocol. The current version is intended mainly for refinement. It is most effective when the starting peptide is up to 5-6 Angstroms from the native. In these cases, predicted models are often below 1 Angstrom RMSD from native.

@section inputs Input Files
See test/integration/tests/flexpepdock/ for example usage.

@section tips Tips
We are still working on the final tuning, it is best to contact us before any application. Some tips
@li structures should be prepacked before applying the protocol (using the relevant protocol flag)
@li It works pretty well on both bound and unbound receptors
@li the lowres_preoptimize option perform a preemptive low-resolution search, it may increase the protocol basin of attraction, but compromise precision in some cases. Perhaps is is

For information about FlexPepDocking application flags, please check the @ref options "options list"

*/
